@model IEnumerable<FinalProjectBandits.Models.TaskListItem>

@{
    ViewData["Title"] = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Welcome to PostHelpGet.com</h1>
<p>
    This site displays sticky notes that represent <b>needs from people in your community</b>.
    They can be as simple as mowing a lawn, or bringing someone groceries.
<p>You have to be registered and logged in in order to create new needs and to checkout items so you can fulfill them.
</p>
<p>
    Items <b>shaded in red</b> represent those people <b>who need your help the most</b>.
    It means they live in a medically-underserved area in Detroit.
    The items <b>shaded in yellow</b> represent those people still in need, but to a lesser degree that those shaded in red. 
    Visit our About page to learn more.
</p>


@*@foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TaskTitle)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TaskDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TaskStartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Expiration)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DatePosted)
                    </td>

                    <td>

                        <a asp-controller="TaskListItems" asp-action="Details" asp-route-id="@item.Id">Details</a>

                    </td>
                </tr>
            }
        </tbody>
    </table>*@

<style>
    .flex-container {
        display: flex;
        flex-wrap: wrap;
        background-color: cornsilk;
    }

    .card-header {
        font-weight: bold;
        font-size: 16px;
    }

    .card-header {
        text-align: center;
    }

    .card-body {
        padding: 1rem;
    }

    .btn1 {
        background-color: deepskyblue;
        border: none;
        color: white;
        padding: 8px 32px;
        text-align: center;
        float: left;
        width: 100%;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        opacity: 1;
        transition: 0.3s;
    }

    .btn2 {
        background-color: indianred;
        border: none;
        color: white;
        padding: 8px 32px;
        text-align: center;
        float: left;
        width: 100%;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        opacity: 1;
    }

    .btn1:hover {
        opacity: 0.6
    }

    .btn2:hover {
        opacity: 0.6
    }
</style>



<div class="flex-container">
    <div class="card-columns">
        @foreach (var item in Model)
        {

            var MuapIndex = item.Customer.MuapIndex;
            var card = " ";
            if (MuapIndex >= 0 && MuapIndex <= 39)
            {
                card = "card bg-danger text-white";
            }
            else if (MuapIndex >= 40 && MuapIndex <= 62)
            {
                card = "card bg-warning text-white";
            }
            else if (MuapIndex >= 63 && MuapIndex <= 100)
            {
                card = "card bg-success text-white";
            }

            <div class="@card" style="max-width: 18rem;">
                <div class="card-header"><strong>@Html.DisplayFor(modelItem => item.TaskTitle)</strong></div>
                <div class="card-body">

                    <p>
                        <span> @Html.Raw((item.TaskDescription.Length > 50 ? item.TaskDescription.Substring(0, 50) + "..." : item.TaskDescription))</span>
                    </p>
                    <p>
                        <span>
                            <strong>Status - </strong>@Html.DisplayFor(modelItem => item.Status)
                        </span>
                    </p>
                    @*<p>
                            <span><strong>Category -</strong> @Html.DisplayFor(modelItem => item.Category)</span>
                        </p>*@
                    <p>
                        <span><strong>Task Start Date - </strong>@Convert.ToDateTime(item.TaskStartDate).ToString("MM/dd/yyyy")</span>
                    </p>

                    <a asp-controller="TaskListItems" asp-action="Details" asp-route-id="@item.Id"><input type="submit" value="Details" class="btn1 btn-primary" /></a>
                    <a asp-controller="TaskListItems" asp-action="CheckOut" asp-route-id="@item.Id"> <input type="submit" value="Checkout" class="btn2 btn-primary" /></a>

                </div>
            </div>
        }
    </div>
</div>